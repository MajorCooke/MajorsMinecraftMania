//==============================================================================
//
// Sound Handler
//
// This is primarily designed to allow for easier sound pitch randomization.
// Pitch is purposely not defined in the SNDINFO lump since that would become
// messy, very fast.
//==============================================================================

Class MinecraftSoundInfo play
{
	Name SoundName;
	Sound ID;
	Vector2 Pitches;
}

Class MinecraftSoundCategory play
{
	Name Category;
	private Array<MinecraftSoundInfo> Sounds;
	
	static MinecraftSoundCategory Create(Name cat)
	{
		if (cat == '' || cat == 'None')
			return null;
			
		let cad = new('MinecraftSoundCategory');
		cad.Init();
		return cad;
	}
	
	protected void Init()
	{
		
	}
}

Class MinecraftSoundManager play
{
	private Array<MinecraftSoundCategory> Categories;
	
	static MinecraftSoundManager Create()
	{
		let mgr = new('MinecraftSoundManager');
		mgr.Categories.Clear();
		return mgr;
	}
	
	protected void Init()
	{
		Categories.Clear();
	}
	
	
}


Class MinecraftSoundHandler : EventHandler
{
	Array<MinecraftSoundCategory> SndCat;
	
	void AddSound(Sound id, double pitch = 1.0, double pmax = 0.0)
	{
		if (S_GetLength(id) <= 0.0)	return;
		
		if (!SndCat)
			
		if (pmax > 0.0 && pitch > pmax)
		{
			double temp = pitch;
			pmax = pitch;
			pitch = temp;
		}
		
		
	}
}