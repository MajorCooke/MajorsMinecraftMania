/*==============================================================================
Map Spawn Restrictions

Allows establishing where mobs can spawn on regular maps
==============================================================================*/

extend class TM_Handler
{
	private bool dodebug;
	private void SetupBans()
	{
		VoidCheck = true;
		Checksum = level.GetChecksum();
		BannedRegions.Clear();
		BannedSectors.Clear();
		BannedPolys.Clear();
		SpawnPolys.Clear();
		SpawnRegions.Clear();
		SpawnSectors.Clear();
		SpawnBox = null;
		WhiteList = false;
		/*
		if (!LoadBans())
		{
			checksum = '';
			Console.Printf("No map found.");
		}
		*/
		
		Switch(Checksum)
		{
		//	Case '6D1D6927156FEE4B39AABA974CDE2866': // Winter's Fury 2023-12-07.pk3 map01:
			Case '3B33E6C222E0744CF19AEBBCE2A06FBE': // Winter's Fury 2024-09-10.pk3 map01
				DoWintersFuryMap01(); 			break;
		//	Case 'BCB22028F59A0E6D44D882D0CF963FA0': // Winter's Fury 2023-12-07.pk3 map02
		//		break;
			Case '084425F180C22EF59FB6DC6DA59D7766': // Winter's Fury 2023-12-07.pk3 map03
			Case 'A5A2974819AE0BABDB4F0974790C4B2B': // Winter's Fury 2024-09-10.pk3 map03
				DoWintersFuryMap03();			break;
		//	Case 'A6E9611CD608151A3046198496B6BD3E': // Winter's Fury 2023-12-07.pk3 map04b
		//		break;
			Case 'C2CE57A0158D9975638844EFF6921403': // Winter's Fury 2023-12-07.pk3 map08
			Case '37E107856CC281F4FE967F8E47E0D7D3': // Winter's Fury 2024-09-10.pk3 map08
				DoWintersFuryMap08();			break;
			Case 'C23AC4564765BB0834325735AFC7CA1D': // Profane Promiseland beta
				DoProfanePromiselandBeta();		break;
			Case '686AB81A51C09BC9126FE313B84AC085': // gz_bigcity.pk3 opencity
				DoBigCity();					break;
			
			// Enable standard banning.
			Default: 
			{
				Checksum = '';
				break;
			}
		}
		
		PostSectorSetup();
	}
	
	/*==========================================================================
	============================================================================
	
	Due to some bugs with the ZScript parser, these need to be in functions so 
	they don't cause issues. Otherwise, a lot of sectors wont process.
	
	============================================================================
	==========================================================================*/
	
	private void DoBigCity()
	{
		
		static const int sec[] =
		{
			1553, 1563, 1587, 1676, 1805, 1815, 1890, 1891, 1892, 1893, 1649, 
			1650, 1661, 1648, 1663, 1664, 1814, 1919, 1967, 1969, 1968, 1980, 
			1987, 1990, 1988, 1989, 1981, 1995, 1996, 1999, 1901, 1902, 1896, 
			1898, 1900, 1899, 1903, 1897, 2226, 2215, 2216, 2217, 2218, 2219, 
			2220, 2221, 2222, 2223, 2224, 2225, 2017, 2228, 2232, 2231, 1788, 
			1785, 1784, 1782, 1783, 1775, 1777, 1774, 1772, 1778, 1792, 741, 
			739, 738, 740, 737, 2989, 2990, 1818, 1803, 1804, 1762, 1764, 1765, 
			1613, 1558, 1767, 1564, 1535, 914, 1588, 1538, 1586, 1560, 1554, 
			1571, 1540, 1572, 1562, 1573, 1569, 1559, 1555, 1557, 1561, 1566, 
			1537, 1565, 1536, 1570, 1568, 1550, 730, 726, 906, 1863, 1866, 1864, 
			1865, 661, 676, 664, 666, 663, 58, 355, 671, 970, 971, 972, 973, 974, 
			975, 13, 8, 186, 187, 9, 10, 356, 1576, 896, 899, 898, 897, 900, 901,
			953, 963, 962, 1797, 1799, 1827, 1833, 1868, 1869, 1867, 1870, 1836, 
			1834, 1837, 1858, 1859, 1838, 1839, 1850, 1851, 1835, 1844, 1840, 1845,
			1846, 1843, 1842, 1847, 1841, 1848, 1872, 1849, 1873, 1861, 1871, 1874,
			85, 299, 297, 298, 331, 295, 294, 296, 99, 182, 302, 303, 301, 300, 100,
			11, 16, 15, 22, 12, 14, 396, 398, 415, 414, 413, 416, 400, 399, 402, 418,
			417, 419, 401, 567, 908, 1597, 1578, 1596, 1592, 907, 1591, 1593, 1686, 
			1696, 1698, 1704, 1708, 1714, 1707, 1721, 1687, 1694, 1723, 1730, 1724, 
			1732, 1700, 1720, 1715, 1702, 1709, 1733, 1706, 1731, 1725, 1722, 1727, 
			1726, 1729, 1728, 1737, 1710, 1713, 1735, 1734, 1701, 1719, 1736, 1705, 
			1716, 1712, 1711, 1718, 1717, 1703, 1699, 1768, 1806, 1820, 1813, 1831, 
			1915, 2991, 1789, 1794, 1796, 1795, 1790, 1793, 475, 2987, 189, 91, 476,
			312, 935, 1780, 1781, 60, 937, 943, 944, 936, 942, 939, 940, 941, 101, 
			96, 97, 41, 45, 40, 1876, 1877, 1875, 1878, 735, 999, 964, 998, 997, 675,
			673, 674, 920, 976, 996, 982, 977, 992, 919, 653, 650, 266, 95, 1879, 
			1882, 1880, 1881, 1883, 1886, 1884, 1885, 1975, 1798, 574, 575, 576, 
			654, 579, 1617, 1616, 1006
		};
		double inf = double.max;
		SpawnRegion(-8192, -2688, 6656, 8192); // Main map area
		SpawnRegion(-16512, 2496,-14272,4032); // Garage
		BanRegion3D(512,5632,192, 1856,7360, inf);
		BanRegion3D(512,-2176,224, 1856,7360, inf);
		BanRegion3D(1328,-2176,224 ,2176,-1792,inf);
		for (int i = 0; i < sec.Size(); i++)
			BanSecNum(sec[i]);
		
	}
	
	private void DoWintersFuryMap01()
	{
		SetRegion(SpawnRegions, -2049,-1416,3148,6272);
		static const double reg[] =
		{
			// Bridge area
			1536,3904,2688,4236, 
			1536,3840,2752,3936,
			1536,3352,2752,3456,
			1536,2945,2688,3392,
			2240,-1600,5056,1280,
			-2049,768,-1016,1630, // Start grave
			-528,-1416,-176,-56, // Inaccessible room south of spawn
			1040,5976,1388,6099, // Green armor north
			-1000,4112,160,5404 // MAP02's place
		};
		for (int i = 0; i < reg.Size(); i += 4)
			SetRegion(BannedRegions, reg[i],reg[i+1],reg[i+2],reg[i+3]);
		
		static const int sec[] =
		{	
			332, 926, 2101, 2754, 2756, 2760, 2761, 3263, 3282, 3283, 
			3311, 3314, 3315, 3325, 4607, 4701, 8388, 8389, 8481
		};
		for (int i = 0; i < sec.Size(); i++)
			BanSecNum(sec[i]);
	}
	
	private void DoWintersFuryMap03()
	{
		static const int ids[] =
		{
			11, 1312, 1311, 1309, 1310, 1262, 1264, 1313, 1315, 1316, 
			1300, 1301, 1263, 1266, 1304, 1307, 1308, 1305, 1265, 1261,
			1303, 1298, 1306, 1314, 1299, 1302, 6796, 6799, 888, 5519, 
			3969, 3972, 3971, 932, 5518, 1358, 904, 1355, 1359, 1366, 
			3970, 1354, 3960, 3959, 3974, 3961, 3962, 3975, 3973, 3976, 
			3964, 3963, 880, 1368, 881, 1367, 1360, 1325, 1326, 1333, 
			1327, 1330, 1332, 1328, 1339, 1369, 1329, 1331, 818, 1361, 
			1362, 764, 1324, 1337, 1336, 1365, 1351, 917, 226, 196, 197, 
			100, 1352, 1069, 1778, 1290, 1281, 1283, 1282, 1276, 1275, 
			1284, 1285, 1289, 1286, 1291, 1294, 1287, 1272, 1271, 1288, 
			1273, 1277, 1278, 1274, 1280, 1279, 1293, 1296, 1297, 1292,
			1295, 1067, 365, 374, 378, 387, 146, 4138, 4085, 916, 922, 
			1417, 1410, 1399, 1468, 1476, 1477, 1484, 1485, 1486, 305, 
			4609, 4608, 5, 4600, 4611, 4642, 4598, 537, 4606, 1469, 
			1419, 4613, 4605, 302, 1323, 4644, 1322, 1470, 1471, 4604, 
			342, 96, 1317, 1472, 4602, 224, 1473, 4603, 367, 307, 389, 
			1474, 1475, 1423, 1421, 1460, 1462, 1461, 1422, 1466, 1418, 
			1425, 1483, 1482, 1480, 1481, 1420, 1479, 1424, 1478, 1467, 
			1464, 1463, 1465, 1561, 1560, 1559, 1557, 1558, 1556, 1555, 
			1554, 1577, 1575, 1576, 1574, 1573, 1572, 1714, 1715, 1716, 
			1717, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1759, 
			1758, 1757, 1578, 1756, 1563, 1755, 1754, 1564, 1753, 1609, 
			1533, 1608, 1525, 1607, 1526, 1606, 1529, 1579, 1614, 1764, 
			1763, 1762, 1761, 1580, 1552, 1549, 1548, 1545, 1546, 1547, 
			1581, 1550, 1551, 1613, 1582, 1532, 1619, 1620, 1611, 1527, 
			3039, 3037, 1528, 1615, 104, 1618, 1751, 1750, 1749, 1605, 
			1748, 1747, 1746, 1745, 1583, 1604, 1772, 1771, 1770, 1769, 
			1584, 1544, 1603, 1541, 1540, 1537, 3038, 1538, 1602, 1539,
			1585, 1542, 1543, 1534, 1586, 1531, 1601, 1600, 1535, 1599, 
			1530, 1598, 1737, 1616, 1738, 1612, 1587, 1588, 1739, 1589, 
			1740, 1590, 1610, 1713, 1741, 1742, 1743, 1617, 1536, 1591, 
			1597, 1592, 1596, 1593, 1721, 1594, 1595, 1729, 1730, 1731, 
			1732, 1733, 1734, 1735, 1571, 1495, 1569, 1570, 1568, 1566, 
			1567
		};
		int size = ids.Size();
		for (int i = 0; i < size; i++)
			SetSecNum(SpawnSectors, ids[i]);
			
		SpawnRegion(-3424,-5152,-2464,-4192);
		SpawnRegion(-3328,-6701,-2560,-5152);
	}
	
	private void DoWintersFuryMap08()
	{
		Console.Printf("WF map found");
		VoidCheck = false;
		
		static const int ids[] =
		{
			1797, 1795, 1601, 1713, 1801, 1790, 1586, 1796, 1794, 1789, 
			1802, 1771, 1798, 1792, 1791, 1803, 1571, 1793, 1799, 1788, 
			1800, 1563, 1857, 1860, 1858, 1867, 1859, 1706, 1681, 1756, 
			1676, 1643, 1636, 1637, 1696, 1744, 1621, 1619, 1616, 1682, 
			1617, 976, 1629, 1698, 1610, 1787, 1630, 1612, 1625, 1623, 
			1753, 1628, 1614, 1633, 1594, 972, 973, 1740, 1596, 1764, 
			1784, 1786, 619, 17, 501, 996, 1020, 1040, 1042, 852, 853, 
			851, 849, 848, 847, 846, 845, 842, 850, 2489, 449, 346, 446, 
			498, 75, 500, 822, 924, 921, 72, 878, 879, 880, 882, 881, 
			886, 885, 1368, 415, 1392, 1412, 1224, 1414, 1222, 362, 961, 
			887, 380, 378, 889, 1251, 883, 917, 918, 884, 1381, 888, 
			1415, 891, 890, 1238, 1257, 1326, 893, 892, 1244, 895, 894, 
			1310, 1264, 897, 896, 1271, 1304, 898, 899, 1384, 1334, 901, 
			900, 1309, 1245, 1265, 1324, 1191, 902, 1372, 1249, 1247, 
			985, 1028, 1485, 1487, 907, 904, 903, 1495, 1486, 905, 906, 
			1488, 908, 909, 915, 1419, 1431, 910, 916, 1399, 1229, 1420, 
			1426, 1417, 1430, 1214, 1422, 1424, 1429, 1418, 1341, 1425, 
			1423, 1416, 1428, 1199, 1427, 1421, 968, 969, 284, 966, 967, 
			410, 140, 122, 503, 261, 147, 130, 155, 257, 4, 302, 418, 
			154, 129, 233, 169, 220, 230, 365, 137, 133, 145, 127, 151, 
			148, 124, 142, 1261, 1242, 1256, 1258, 1240, 1253, 962, 963, 
			1100, 580, 583, 593, 584, 582, 106, 508, 524, 18, 510, 520, 
			484, 509, 519, 506, 523, 47, 511, 517, 522, 507, 313, 518, 
			512, 505, 521, 2361, 1046, 2146, 2232, 2219, 1065, 1135, 
			2392, 2234, 2221, 2239, 2238, 2307, 1089, 1127, 2242, 2223, 
			2237, 2228, 2226, 2246, 2230, 2352, 2305, 2174, 2144, 2136, 
			2315, 2364, 2127, 2147, 2245, 2225, 1134, 840, 2291, 2252, 
			1171, 2130, 2285, 2290, 2128, 992, 1088, 2462, 2150, 2149, 
			2464, 2472, 2145, 2148, 2463, 2465, 2152, 1140, 2112, 1137, 
			2396, 978, 1103, 2408, 2182, 2210, 2398, 2404, 2393, 2405, 
			2322, 2400, 2402, 2406, 2395, 2197, 2399, 2401, 2394, 2407, 
			2378, 2397, 2403, 283, 277, 352, 437, 295, 353, 965, 964, 
			469, 467, 465, 471, 249, 164, 105, 165, 923, 920, 843, 922, 
			919, 844
		};
		
		int size = ids.Size();
		for (int i = 0; i < size; i++)
			SetSecNum(SpawnSectors, ids[i]);
	}
	
	private void DoProfanePromiselandBeta()
	{
		// Central hub's nothern caco holes
		BanRegion(-7872,-3328,-7232,-2944);
		BanRegion(-5184,-3360,-4544,-2912);
		BanRegion(-7168,-2880,-6784,-2240);
		BanRegion(-5664,-2880,-5216,-2240);
		BanRegion(-6432,-4128,-5984,-3680); // middle platform
		
		// First revenant window dressing
		BanRegion(-6592,-5504,-5824,-4896);
		BanSecNum(566);
		BanSecNum(567);
		
		// Western poison sewer spawner section
		BanRegion(-11392,-9792,-10240,-8848);
		
		// South swirly arena
		BanRegion(-5312,-11456,-4544,-12800);
		
		// Revenight arena. You know which one... Caco chambers
		BanRegion(-5280,1728,-3808,2112);
		BanRegion(-5280,2880,-3808,3264);
		BanRegion(-3072,2624,-3776,3250);
		BanRegion(-3072,2368,-3739,1744);
		
		// Lava platforming after the above
		BanSecNum(7376);
		
		// Voodoo doll regions
		BanRegion(-2528,-9216,-2464,-7808);
	}
	
}