// For the sake of identification and inheritance.

Class MinecraftEntity : Actor
{
	Vector3 Middle()	{	return (0, 0, height * 0.5);	}

	int Explode(bool sfx = true,
		int damage = -1, int radius = -1, int full = 0,
		double thrust = -1, double trad = -1, int tfull = -1,
		int flags = XF_HURTSOURCE, int radflags = 0,
		bool alert = false, Name DamageType = 'None',
		Class<Actor> filter = null, int eflags = EXF_PARENT)
	{
		if (radius > 0.0 && sfx)
		{
			let exp = Spawn('MCExplosion', pos + Middle(), ALLOW_REPLACE);
			if (exp)
			{
				exp.A_SetScale(radius);
			}
		}
		Actor source = Target;
		if (bISMONSTER) source = self;
		
		return MC_Functions.Explode(self, source, damage, radius, full, thrust, 
			trad, tfull, flags, radflags, alert, DamageType, filter, eflags);
	}
}

Class MCPlayerProtection : PowerProtection
{
	Default
	{
		DamageFactor "CreeperBig", 0.0;
	}
	
	override void InitEffect()
	{
		Super.InitEffect();
		EffectTics = 1000;
	}
	
	override void DoEffect()
	{
		EffectTics++;
		Super.DoEffect();
	}
}

Class MCImmunityFrames : PowerProtection
{
	override void InitEffect()
	{
		Super.InitEffect();
		EffectTics = 18;
	}
	
	override void ModifyDamage(int damage, Name damageType, out int newdamage, bool passive, Actor inflictor, Actor source, int flags)
	{
		if (passive && EffectTics > 0)
		{
			if (damage < 1 ||
				(source is "MinecraftEntity") || 
				(inflictor is "MinecraftEntity"))
				newdamage = -1;
		}
	}
	
	override void AbsorbDamage(int damage, Name damageType, out int newdamage, Actor inflictor, Actor source, int flags)
	{
		if (EffectTics > 0)
		{
			if (damage < 1 ||
				(source is "MinecraftEntity") || 
				(inflictor is "MinecraftEntity"))
				newdamage = -1;
		}
	}
}